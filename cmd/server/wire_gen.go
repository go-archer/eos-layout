// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"eos-layout/internal/config"
	"eos-layout/internal/handler"
	"eos-layout/internal/repository"
	"eos-layout/internal/server"
	"eos-layout/internal/service"
	"eos-layout/pkg/log"
	"github.com/google/wire"
)

// Injectors from wire.go:

func newApp(cfg *config.Config, logger *log.Logger) (server.Server, func(), error) {
	handlerHandler := handler.NewHandler(logger)
	serviceService := service.NewService(cfg, logger)
	repositoryRepository := repository.NewRepository(cfg, logger)
	areaRepository := repository.NewAreaRepository(repositoryRepository)
	areaService := service.NewAreaService(serviceService, areaRepository)
	areaHandler := handler.NewAreaHandler(handlerHandler, areaService)
	serverServer := server.NewHTTPServer(cfg, logger, areaHandler)
	return serverServer, func() {
	}, nil
}

// wire.go:

var HandlerSet = wire.NewSet(handler.NewHandler, handler.NewAreaHandler)

var ServiceSet = wire.NewSet(service.NewService, service.NewAreaService)

var RepositorySet = wire.NewSet(repository.NewRepository, repository.NewAreaRepository)
